spring.application.name=fx-subscription-service
outbox.subscriptions.check.rate=300000

spring.ssl.bundle.jks.fx-subscription-service.key.alias=fx-subscription-service
spring.ssl.bundle.jks.fx-subscription-service.key.password=${KEY_PASSWORD}
spring.ssl.bundle.jks.fx-subscription-service.keystore.location=classpath:keystore.p12
spring.ssl.bundle.jks.fx-subscription-service.keystore.password=${KEYSTORE_PASSWORD}
spring.ssl.bundle.jks.fx-subscription-service.keystore.type=PKCS12
#spring.ssl.bundle.jks.web-server.truststore.location=classpath:truststore.p12
#spring.ssl.bundle.jks.web-server.truststore.password=truststore-password
#spring.ssl.bundle.jks.web-server.truststore.type=PKCS12
spring.ssl.bundle.jks.web-server.reload-on-update=false

server.port=8443
server.ssl.bundle=fx-subscription-service
server.ssl.client-auth=NONE

security.jwt.token.secret-key=${JWT_SECRET_KEY}
security.jwt.token.expire-length=600000

spring.datasource.url=jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=password
spring.h2.console.enabled=true
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.open-in-view=false

spring.threads.virtual.enabled=true
spring.kafka.bootstrap-servers=broker:29092
spring.kafka.topic.subscription-changes=subscription-change-events

#spring.ai.mcp.server.name=my-fx-subscription-server

# Ollama Configuration
spring.ai.ollama.chat.options.model=qwen3
spring.ai.ollama.base-url=http://localhost:11434

# expose actuator health endpoint
management.endpoints.web.exposure.include=health,prometheus
management.endpoint.health.show-details=always
management.endpoint.prometheus.enabled=true

# All traces should be sent to the latency analysis tool
management.tracing.sampling.probability=1.0

# For Exemplars to work, we need histogram buckets
management.metrics.distribution.percentiles-histogram.http.server.requests=true

# traceID and spanId are predefined MDC keys - we want the logs to include them
logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]
